name: build-ubuntu

env:
  BUILD_TYPE: Release

on: [push, pull_request]

jobs:
  build:
    name: build (${{ matrix.job_name }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - mcu: STM32G431
            variant_flag: ""
            job_name: STM32G431
          - mcu: STM32G431
            variant_flag: "-DBUILD_VARIANT=VTX"
            job_name: STM32G431_VTX

          - mcu: STM32G474
            variant_flag: ""
            job_name: STM32G474
          - mcu: STM32G474
            variant_flag: "-DBUILD_VARIANT=VTX"
            job_name: STM32G474_VTX

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for all branches and tags
        fetch-tags: true

    - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '14.2.Rel1' # <-- The compiler release to use

    - name : Create build directory
      run: mkdir -p build-${{ matrix.job_name }}

    - name : Configure & Build
      working-directory: ./build-${{ matrix.job_name }}
      run: |
        cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DTARGET_MCU=${{ matrix.mcu }} ${{ matrix.variant_flag }} ..
        make -j"$(nproc)"

    - name : Upload HEX
      uses: actions/upload-artifact@v4
      with:
        name: "OpenPixelOSD_${{ matrix.job_name }}_HEX"
        path: ${{ github.workspace }}/build-${{ matrix.job_name }}/*.hex

    - name: Upload BIN
      uses: actions/upload-artifact@v4
      with:
        name: "OpenPixelOSD_${{ matrix.job_name }}_BIN"
        path: ${{ github.workspace }}/build-${{ matrix.job_name }}/*.bin